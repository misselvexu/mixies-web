/*
 * Made with all the love in the world
 * by scireum in Remshalden, Germany
 *
 * Copyright by scireum GmbH
 * http://www.scireum.de - info@scireum.de
 */

package sirius.web.services;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Used to provides runtime-retrievable information for structured services.
 * <p>
 * The documentation can be shown by calling <tt>/service</tt> via the HTTP interface.
 */
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
public @interface AutoDoc {
    /**
     * Contains a short an descriptive title
     *
     * @return a short an descriptive title for the annotated element.
     */
    String title();

    /**
     * Names the functional category.
     *
     * @return the functional category used to group elements belonging to the same function or component
     */
    String category() default "";

    /**
     * A description for the annotated element
     *
     * @return the description for the annotated element
     */
    String description() default "";

    /**
     * A list of all parameters used by the annotated element
     *
     * @return the parameter documentation for the annotated element
     */
    DocParam[] params() default {};

    /**
     * Returns all create result structures.
     * <p>
     * As annotations cannot be nested, a list of nodes is returned which can reference each other.
     *
     * @return the result structure generated by this service
     */
    DocNode[] result() default {};
}
