@args sirius.web.health.Cluster cluster, sirius.kernel.health.metrics.Metrics metrics, boolean all
@extends(view.wondergem.template.html, title: ("[" + cluster.getClusterState() + "/" + cluster.getNodeState() + "] " + product + " - Status"))
@section(head) {
        <style>
            .GRAY {
                color: #555555;
            }
            .GREEN {
                color: #168d12;
            }
            .RED {
                color: #9f3d33;
            }
            .YELLOW {
                color: rgb(209, 170, 0);
            }
        </style>
}

@section(breadcrumbs) {
    <li><a href="@prefix/system/state">System State</a></li>
}

@pageHeader() {
    <span class="@cluster.getNodeState()">System State</span> <small>@ctx.getNodeName()</small>
    <div class="pull-right">
        @if (all) {
            <a href="@prefix/system/state" class="btn btn-primary"><i class="fa fa-minus"></i> Less</a>
            <a class="btn btn-default" href="@prefix/system/state?all=true"><i class="fa fa-refresh"></i></a>
        } else {
            <a href="@prefix/system/state?all=true" class="btn btn-primary"><i class="fa fa-plus"></i> More</a>
            <a class="btn btn-default" href="@prefix/system/state"><i class="fa fa-refresh"></i></a>
        }
    </div>
    <div class="clearfix"></div>
}

<table class="table table-striped">
    <tr>
        <td style="overflow: hidden">
            Uptime
        </td>
        <td class="align-right" style="overflow: hidden">
            @NLS.convertDuration(sirius.kernel.Sirius.getUptimeInMilliseconds(), true, false)
        </td>
    </tr>
    @for(sirius.kernel.health.metrics.Metric m : metrics.getMetrics()) {
        @if (all || m.getState() != sirius.kernel.health.metrics.MetricState.GRAY) {
            <tr class="@m.getState()">
                <td style="overflow: hidden">
                    @m.getName()
                </td>
                <td class="align-right" style="overflow: hidden">
                    @m.getValueAsString()
                </td>
            </tr>
        }
    }
</table>

@if (!cluster.getNodeInfos().isEmpty()) {
    @heading() {
        <span class="@cluster.getClusterState()">Cluster</span>
    }

    @for(sirius.web.health.NodeInfo info : cluster.getNodeInfos()) {
        @{ final sirius.web.health.NodeInfo finalInfo = info; }
        @subHeading() {
            <span class="@finalInfo.getNodeState()">@finalInfo.getName()</span>
            <small>@finalInfo.getEndpoint()</small>
        }
        <table class="table table-striped">
            <tr>
                <td style="overflow: hidden">
                    Uptime
                </td>
                <td class="align-right" style="overflow: hidden">
                    @info.getUptime()
                </td>
            </tr>
            @if (info.getPingFailures() > 0) {
                <tr class="RED">
                    <td style="overflow: hidden">
                        Ping Failures
                    </td>
                    <td class="align-right" style="overflow: hidden">
                        @info.getPingFailures()
                    </td>
                </tr>
            }

            @for(sirius.kernel.health.metrics.Metric m : info.getMetrics()) {
                @if (all || m.getState() != sirius.kernel.health.metrics.MetricState.GRAY) {
                    <tr class="@m.getState()">
                        <td style="overflow: hidden">
                            @m.getName()
                        </td>
                        <td class="align-right" style="overflow: hidden">
                            @m.getValueAsString()
                        </td>
                    </tr>
                }
            }
        </table>
    }
}